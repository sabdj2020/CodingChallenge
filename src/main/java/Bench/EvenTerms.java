package Bench;

import java.awt.List;
import java.util.ArrayList;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

 * */
public class EvenTerms {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
	    ArrayList<Integer> fibNum = new ArrayList<Integer>();
	    fibNum=getFibNumbers();
	    int sum=0;
	    for(int i=0; i<fibNum.size();i++) {
	    	System.out.println(fibNum.get(i));
	    	if (fibNum.get(i)%2==0) {
	    		sum=sum+fibNum.get(i);
	    	}
	    }
    	System.out.println("the sum of the even-valued terms in Fibonacci sequence " + sum);
	}
	public static ArrayList<Integer> getFibNumbers()    {
	    ArrayList<Integer> fibNum = new ArrayList<Integer>();
	    int current=1;
	    int previous=0;
	    int next=2;
	    fibNum.add(previous);
	    fibNum.add(current);
	    while (next<=4000000) {
	    	fibNum.add(next);	    		    	
	    	previous=current;
	    	current=next;
	    	next=previous+current;
	    }
		return fibNum;
	}
}